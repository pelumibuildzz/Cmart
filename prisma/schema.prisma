// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  BUSINESS
  ADMIN
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  password     String
  name         String
  universityId String
  role         Role      @default(USER)
  orders       Order[]
  business     Business? @relation(fields: [businessId], references: [id])
  businessId   String?
}

model Business {
  id           String    @id @default(cuid())
  userId       String    @unique
  name         String
  description  String
  universityId String
  categoryId   String
  category     Category  @relation(fields: [categoryId], references: [id])
  products     Product[]
  orders       Order[]
  isVerified   Boolean   @default(false)
  User         User[]
}

model Product {
  id          String         @id @default(cuid())
  name        String
  description String
  imageUrl    String
  price       Float
  stock       Int
  isAvailable Boolean        @default(true)
  businessId  String
  categoryId  String
  Business    Business       @relation(fields: [businessId], references: [id])
  images      ProductImage[]
}

model ProductImage {
  id        String  @id @default(cuid())
  url       String // URL of the image
  productId String // Foreign key to Product
  Product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id         String   @id @default(cuid())
  userId     String
  productId  String
  businessId String
  total      Float
  status     String
  paymentId  String?
  createdAt  DateTime @default(now())
  User       User     @relation(fields: [userId], references: [id])
  Business   Business @relation(fields: [businessId], references: [id])
}

model Category {
  id         String     @id @default(cuid())
  name       String     @unique
  isCustom   Boolean    @default(false)
  businesses Business[]
}

model University {
  id   String @id @default(cuid())
  name String @unique
}
